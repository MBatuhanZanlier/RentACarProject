// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACarProject.DAL;

#nullable disable

namespace RentACarProject.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240629144633_mig_add_alltable1")]
    partial class mig_add_alltable1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RentACarProject.DAL.DeliveryLocation", b =>
                {
                    b.Property<int>("DeliveryLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryLocationId"), 1L, 1);

                    b.Property<string>("DeliveryLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryLocationId");

                    b.ToTable("DeliveryLocations");
                });

            modelBuilder.Entity("RentACarProject.DAL.ForRentCar", b =>
                {
                    b.Property<int>("ForRentCarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForRentCarID"), 1L, 1);

                    b.Property<string>("CarBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CarDayPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarEnginePower")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarFuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CarGearType")
                        .HasColumnType("bit");

                    b.Property<string>("CarKM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarRenterPersonMinAge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarTotalPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ForRentCarID");

                    b.ToTable("ForRentCars");
                });

            modelBuilder.Entity("RentACarProject.DAL.ReceivingLocation", b =>
                {
                    b.Property<int>("ReceivingLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceivingLocationID"), 1L, 1);

                    b.Property<string>("ReceivingLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceivingLocationID");

                    b.ToTable("ReceivingLocations");
                });

            modelBuilder.Entity("RentACarProject.DAL.RentACar", b =>
                {
                    b.Property<int>("RentACarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentACarID"), 1L, 1);

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryLocationId")
                        .HasColumnType("int");

                    b.Property<int>("ForRentCarID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceivingLocationID")
                        .HasColumnType("int");

                    b.HasKey("RentACarID");

                    b.HasIndex("DeliveryLocationId");

                    b.HasIndex("ForRentCarID");

                    b.HasIndex("ReceivingLocationID");

                    b.ToTable("RentACars");
                });

            modelBuilder.Entity("RentACarProject.DAL.RentACar", b =>
                {
                    b.HasOne("RentACarProject.DAL.DeliveryLocation", "DeliveryLocation")
                        .WithMany("RentACars")
                        .HasForeignKey("DeliveryLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACarProject.DAL.ForRentCar", "ForRentCar")
                        .WithMany("RentACars")
                        .HasForeignKey("ForRentCarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACarProject.DAL.ReceivingLocation", "ReceivingLocation")
                        .WithMany("RentACars")
                        .HasForeignKey("ReceivingLocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryLocation");

                    b.Navigation("ForRentCar");

                    b.Navigation("ReceivingLocation");
                });

            modelBuilder.Entity("RentACarProject.DAL.DeliveryLocation", b =>
                {
                    b.Navigation("RentACars");
                });

            modelBuilder.Entity("RentACarProject.DAL.ForRentCar", b =>
                {
                    b.Navigation("RentACars");
                });

            modelBuilder.Entity("RentACarProject.DAL.ReceivingLocation", b =>
                {
                    b.Navigation("RentACars");
                });
#pragma warning restore 612, 618
        }
    }
}
